<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<beans:bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" id="propertyPlaceholderConfigurer">
		<beans:property name="locations" value="classpath:DB/config/*.properties"></beans:property>
	</beans:bean>
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- 어떤 종류의 화면으로 볼 것인가 -->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- 사용자가 만드는 커스텀 뷰를 만들 것->util에 FileDown 클래스 -->
	<!-- bean: 객체생성 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="1"></beans:property>
	</beans:bean>
	
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0"></beans:property>
	</beans:bean>
	<!-- 리턴되는 bean의 이름을 찾아라 -->
	<!-- value 값이 낮을 수록 우선 순위가 높아서 0이라고 한 것 -->
	<!-- 파일다운이라는 메서드가 있으면 파일메서드로 가고 없으면 위의 jsp 파일로  -->
	
	
	<interceptors>
		<interceptor>
			<mapping path="/qna/*"/>
			<exclude-mapping path="/qna/qnaList"/>
			<beans:ref bean="qnaInterceptor"/>
		</interceptor>
	</interceptors>	
	
	
	
	
<!--  대신 어노테이션을 클래스 상단에 @Component 줬음	<beans:bean class="com.google.s5.Interceptor.NoticeInterceptor" id="noticeInterceptor"></beans:bean> -->
	<interceptors>
		<interceptor>
			<!-- URL 패턴 //루트로 시작하는 주소는 모두 여기를 거치세요-->
			<!-- 경로를 만들때부터 <mapping path="/notice/admin/*"/> -->
			<mapping path="/notice/*"/>
			<!-- 제외할 부분 -->
			<exclude-mapping path="/notice/noticeList"/>
			<exclude-mapping path="/notice/noticeSelect"/>
			<beans:ref bean="noticeInterceptor"/>
			<!-- 참조하기 위해서는 id가 필요하다 -->
		</interceptor>
	</interceptors>	
	
	
	
	<interceptors>
		<interceptor>
		<mapping path="/member/memberPage"/>
		<beans:ref bean="memberInterseptor"/>
		</interceptor>
		</interceptors>
		
		
	<interceptors>
		<interceptor>
			<!-- URL 패턴 //루트로 시작하는 주소는 모두 여기를 거치세요-->
			<mapping path="/*"/>
			<!-- 적용할 Interceptor class(객체생성) //클래스에는 패키지명을 다써야 한다. -->
			<beans:bean class="com.google.s5.Interceptor.TestInterceptor"></beans:bean>
		</interceptor>
	</interceptors>
	
	
	
	
	<context:component-scan base-package="com.google.s5" />
	
	
	
</beans:beans>
