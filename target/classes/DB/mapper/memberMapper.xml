<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
      <mapper namespace="com.google.s5.member.MemberDAO">
   
   
   <resultMap type="MemberVO" id="loginResult">
   		<id column="Id" property="id"/>
   		<result column="password" property="password"/>
   		<result column="name" property="name"/>
		<result column="email" property="email"/>
		<result column="tel" property="tel"/>
		<result column="age" property="age"/>
		<!-- 1개인 경우 1:1-->
		<association property="memberFileVO" javaType="MemberFileVO">
			<result column="fileName" property="fileName"/>
			<result column="oriName" property="oriName"/>
		</association>
	
	</resultMap>
   
   
   
   
   <!-- list 조각-->
   <sql id="search">
  		like '%'||#{search}||'%'
  		</sql>	
  		<!-- 전체 글의 개수 -->
  		<select id="memberCount"  parameterType="Pager"  resultType="Long">

  		select count(id) from member 
  		<where>
  			<if test="kind=='id'">
  			id <include refid="search"></include>
  			</if>
  			
  			<if test="kind=='name'">
  			name <include refid="search"></include>
  			</if>
  			
  			<if test="kind=='phone'">
  			phone <include refid="search"></include>
  			</if>
  			
  			<if test="kind=='email'">
  			email <include refid="search"></include>
  			</if>
  			
  		</where>

  		</select>
  	
  	
  <!-- "memberIdCheck -->	
  <select id="memberIdCheck" parameterType="MemberVO" resultType="MemberVO" >
  select id from member where id=#{id}
  <!--  String 타입을 파라미터 타입으로 쓰면 버그가 올 수 있다. -->
  </select>
  
  
<!-- list -->
   	<select id="memberList" parameterType="Pager" resultType="MemberVO">
		select * from
			(select N.*, rownum R from
				(select * from member where 
				<choose>
					<when test="kind == 'id'">
						id
					</when>
					
					<when test="kind=='name'">
						name
					</when>
					
					<when test="kind=='phone'">
						phone
					</when>
					
					<otherwise>
						email
					</otherwise>
				
				</choose>
				<include refid="search"></include> ) N)
				where R between #{startRow} and #{lastRow}
	</select>
   
<!-- insert/join -->
   <insert id="memberJoin" parameterType="MemberVO">
   INSERT INTO member VALUES (#{id},#{password},#{name},#{age},#{email},#{tel})
   </insert>
 
 
 <!-- select/login -->
 	<select id="memberLogin" parameterType="MemberVO"  resultMap="loginResult">
		Select M.*, F.fileName, F.oriName    
		from member M left join memberFile F
		on (M.id = F.id)
		where M.id = #{id} and M.password=#{password}
 	</select>
 
 	
 
 <!-- update/update -->
 	<update id="memberUpdate" parameterType="MemberVO" >
 	UPDATE member set password=#{password},name=#{name},email=#{email},tel=#{tel},age=#{age} where id=#{id}
 	
 	</update>
 	
 <!-- delete -->	
   <delete id="memberDelete" parameterType="MemberVO">
		delete member where id=#{id}
	</delete>
	
<!-- deletes -->	
	<delete id="memberDeletes" parameterType="List">
		delete member where id in
		<foreach collection="list" item="id" open="(" close=")" separator=",">
			#{id}
		</foreach>
	
	</delete>
	
   </mapper>